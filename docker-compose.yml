version: '3'

services:
  traefik:
    build:
      context: ./bin/traefik
      args:
        - BASIC_AUTH_USERNAME=$BASIC_AUTH_USERNAME
        - BASIC_AUTH_PASSWORD=$BASIC_AUTH_PASSWORD
    container_name: "traefik.${DOMAIN-docker-host}"
    restart: unless-stopped
    command: -c /dev/null --api --docker --logLevel=DEBUG --acme.email=$EMAIL --configFile=/etc/traefik/traefik.toml
    ports:
      - 80:80
      - 443:443
      - 8025:8025
    expose:
      - 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/etc/traefik:/etc/traefik
      - ./volumes/var/log/traefik:/var/log/traefik
    labels:
      traefik.enable: "true"
      traefik.backend: traefik
      traefik.frontend.rule: "Host:traefik.${DOMAIN-docker-host}"
      traefik.port: "8080"

  portainer:
    image: portainer/portainer
    container_name: "portainer.${DOMAIN-docker-host}"
    restart: unless-stopped
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      # Use the following yaml formatting to allow our basic auth
      # variables to be properly escaped
      - "traefik.backend=portainer"
      - "traefik.port=9000"
      - "traefik.frontend.rule=Host:portainer.${DOMAIN-docker-host}"
      - 'traefik.frontend.auth.basic=${BASIC_AUTH_USERNAME}:${BASIC_AUTH_PASSWORD_ENCRYPTED}'
    depends_on:
      - traefik

  mysql:
    build:
      context: ./bin/mysql
    container_name: "mysql.${DOMAIN-docker-host}"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      # Only specify the DB_NAME if we want a db created with this name
      MYSQL_DATABASE: "${DB_NAME}"
    restart: unless-stopped
    ports:
      - 3306:3306
    volumes:
      - ./volumes/var/lib/mysql:/var/lib/mysql
    depends_on:
      - traefik

  redis:
    image: redis:4.0.9-alpine
    container_name: "redis.${DOMAIN-docker-host}"
    volumes:
      - ./volumes/var/lib/redis/data:/data
    depends_on:
      - traefik

  web:
    build:
      context: ./bin/web
    container_name: "web.${DOMAIN-docker-host}"
    environment:
      # Set locale to UTF-8 (https://oncletom.io/2015/docker-encoding/)
      LANG: C.UTF-8

      # REDIS is linked
      REDIS_HOST: redis
    restart: unless-stopped
    volumes:
      - ./volumes/etc/nginx/conf.d:/etc/nginx/conf.d
      - ./volumes/usr/share/nginx:/usr/share/nginx
      - ./volumes/var/log:/var/log
    labels:
      traefik.backend: "web"
      traefik.port: "80"
      # add multiple hosts
      # either:
      #   traefik.frontend.rule1=Host:example.com;Host:example2.com
      # or
      #   traefik.frontend.rule1=Host:example.com,example2.com
      traefik.frontend.rule: "Host:web.${DOMAIN-docker-host},craft2.${DOMAIN-docker-host}"
      # traefik.frontend.rule: "HostRegexp:{subdomain:[a-z]+}.${DOMAIN-docker-host}"
      traefik.frontend.passHostHeader: "true"
    depends_on:
      - mysql
      - redis

  ## APACHE
  # web:
  #   build:
  #     context: ./bin/web
  #   container_name: 'web'
  #   restart: unless-stopped
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./www/html:/var/www/html
  #     - ./config/php/php.ini:/usr/local/etc/php/php.ini
  #     - ./config/vhosts:/etc/apache2/sites-available
  #     - ./logs/apache2:/var/log/apache2
  #   labels:
  #     - 'traefik.backend=web'
  #     - 'traefik.port=80'
  #     - 'traefik.frontend.rule=Host:localhost.web'
  #   networks:
  #     - database
  #     - server
  #   depends_on:
  #     - mysql
